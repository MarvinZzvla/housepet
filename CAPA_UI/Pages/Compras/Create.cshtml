@page
@model CAPA_UI.Pages.MaestrosDetalles.Compras.CreateCompraModel
@{
}

@section Scripts{
<script>

    //Objeto que enviaremos al crear la compra
    Compra = {
        cabecera:{
         TableName: 'CRUD_CABECERA_COMPRA',
         Parametro: 'C',
         IdCabCompra:0,
         FKProveedor:0,
         FechaCompra: new Date().toLocaleDateString(),
         DescuentoCompra:0,
         IvaCompra:0,
         TotalCompra:0,
        },
        detalle:[]
    }

    //Asignamos fecha de hoy al input de fecha
    document.addEventListener('DOMContentLoaded', () => {
      const dateInput = document.getElementById('staticFecha')
      dateInput.value = new Date().toLocaleDateString('es-MX',{year: 'numeric', month: 'long', day: 'numeric'});
    });

    //Añadir una fila mas al detalle de la compra
    function addRow(){
        
        //Tomamos los valores del Formulario
        let cbArticulo = document.getElementById("TxtIdCategoria");
            console.log("Hola mundo Zavala")
        let ArticuloId = parseInt(cbArticulo.value)
        let ArticuloNombre = cbArticulo.options[cbArticulo.selectedIndex].text;
        let Cantidad = parseInt(document.getElementById("TxtCantidadDetalleCompra").value);
        let Precio = parseInt(document.getElementById("TxtPrecioDetalleCompra").value);

        let ObjetoDetalle = {
              TableName :'CRUD_DETALLE_COMPRA',
              Parametro :'C',
              FkCompra:0 ,
              FkArticulo:ArticuloId,
              CantidadCompra:Cantidad,
              PrecioCompra: Precio,
        }
        
        if(isNaN(Cantidad) || isNaN(Precio)|| Math.sign(Cantidad) !==1 || Math.sign(Precio) !==1){
            alert('Por favor Asegurar de llenar todos los campos del formulario con un valor valido antes de Agregar un articulo')
            return
        }

        //Ver si el articulo ya existia en el objeto para sumar sus cantidades y precio si no solamente se agrega al arreglo
        let detalleCompra = Compra.detalle.find(det => det.FkArticulo === ObjetoDetalle.FkArticulo)
        if(!detalleCompra){
            Compra.detalle.push(ObjetoDetalle);
            createTableRowDOM(ArticuloId,ArticuloNombre,Cantidad,Precio)
            console.log(Compra)
        }
        else{
            let index = Compra.detalle.indexOf(detalleCompra);
            Compra.detalle[index].CantidadCompra += ObjetoDetalle.CantidadCompra;
            Compra.detalle[index].PrecioCompra += ObjetoDetalle.PrecioCompra;
            updateTableRowDOM(ArticuloId,Compra.detalle[index].CantidadCompra,Compra.detalle[index].PrecioCompra)
            console.log(Compra)
        }
        //Actualizamos los precios
        setStaticPrices();
    }
    
    //Eliminar el detalle tanto del objeto compra como del Html
    function deleteTableRow(ArticuloId){
        //Eliminamos la Fila del Html
        let trArticulo = document.getElementById(`tr-${ArticuloId}`);
        trArticulo.parentElement.removeChild(trArticulo);
        //Eliminamos el Objeto del Array de Detalle
        let detalleCompra = Compra.detalle.find(det => det.ArticuloId === ArticuloId)
        let index = Compra.detalle.indexOf(detalleCompra);
        Compra.detalle.splice(index,1);
        //Actualizamos los precios
        setStaticPrices();
    }

    // Añadir el html del la nueva linea
    function createTableRowDOM(ArticuloId,ArticuloNombre,Cantidad,Precio){
        //Asignamos nuestro TBody
        let tablebody = document.getElementById("tbl-detalle");
        
        //Creamos la fila de la tabla
        let fila = document.createElement("tr");
        fila.id = `tr-${ArticuloId}`;

        //Creamos los TD de la fila
        let tdArticuloNombre = document.createElement("td");
        let tdCantidad = document.createElement("td");
        tdCantidad.id = `td-cantidad-${ArticuloId}`
        let tdPrecio = document.createElement("td");
        tdPrecio.id = `td-precio-${ArticuloId}`
        let tdAcciones = document.createElement("td");
        
        //Asignamos los valores que tendra nuestros Td
        let txtArticuloNombre = document.createTextNode(ArticuloNombre);
        let txtCantidad = document.createTextNode(Cantidad);
        let txtPrecio = document.createTextNode(`C$ ${Precio}`);

        //Creamos el boton delete con el evento de eliminar el detalle
        let btnDelete = document.createElement("button");
        btnDelete.type = 'button';
        btnDelete.className = 'btn btn-danger';
        btnDelete.addEventListener('click',()=>deleteTableRow(ArticuloId))
        btnDelete.innerText = 'Eliminar';

        //Añadimos lo valores a nuestros Td
        tdArticuloNombre.appendChild(txtArticuloNombre);
        tdCantidad.appendChild(txtCantidad);
        tdPrecio.appendChild(txtPrecio);
        tdAcciones.appendChild(btnDelete);

        //Añadimos nuestros Td a la fila Creada
        fila.appendChild(tdArticuloNombre);
        fila.appendChild(tdCantidad);
        fila.appendChild(tdPrecio);
        fila.appendChild(tdAcciones)
        
        //Añadimos nuestra fila creada a nuestro TBody
        tablebody.appendChild(fila);
    }

    //Actualizar el Html de la Linea
    function updateTableRowDOM(ArticuloId,Cantidad,Precio){
        let tdCantidad = document.getElementById(`td-cantidad-${ArticuloId}`);
        let tdPrecio = document.getElementById(`td-precio-${ArticuloId}`);
        tdCantidad.innerText = Cantidad;
        tdPrecio.innerText = `C$ ${Precio}`;
    }

       async function agregarArticulo(item)
    {
        let articulosList = JSON.parse('@Html.Raw(Json.Serialize(Model.Articulos))') 
        console.log(articulosList);
        let articulo = articulosList.find(x => x.idArticulo === item)
        TxtIdCategoria.value = articulo.nombreArticulo;
        TxtPrecioDetalleCompra.value = articulo.precioVenta;
        TxtId.value = item;
        $('#ModalArticuloComprar').modal('hide');
    }
    //Actualizamos los precios de los Input Staticos
    function setStaticPrices(){
        let StaticSubTotal = document.getElementById('staticSubTotal');
        let StaticIva = document.getElementById('staticIVA');
        let StaticPrecioTotal = document.getElementById('staticPrecioTotal');
        let Cantidad = document.getElementById("TxtCantidadDetalleCompra");
        let Precio = document.getElementById("TxtPrecioDetalleCompra");


        let PrecioTotal = Compra.detalle.map(det=> det.PrecioCompra).reduce((prev,current)=> prev+current,0);
            PrecioTotal = PrecioTotal * parseInt(TxtCantidadDetalleCompra.value);
        console.log(TxtCantidadDetalleCompra.value)
        let Iva = PrecioTotal * 0.15;
        let SubTotal = PrecioTotal - Iva;

        Compra.cabecera.IvaCompra = Iva;
        Compra.cabecera.TotalCompra = PrecioTotal;

        StaticSubTotal.value =  `C$ ${SubTotal}`;
        StaticIva.value =  `C$ ${Iva}`;
        StaticPrecioTotal.value =  `C$ ${PrecioTotal}`;
        Cantidad.value=0;
        Precio.value =0;
    }

    async function createCompra(){
     
        if(Compra.detalle.length==0){
            alert('Para crear la compra necesita tener al menos un Articulo en el detalle')
         return;
        }

        if(!confirm('Revise todos los datos, esta seguro de crear la compra?.')){
         return;
        }
        let cbProveedor = document.getElementById("TxtIdProveedor");
        let ProveedorId = parseInt(cbProveedor.value)
        Compra.cabecera.FKProveedor = ProveedorId;
       
        Compra.cabecera.FechaCompra  =  new Date().toLocaleString().replace(',','');
        
        console.log(Compra.cabecera.FechaCompra);
        
        let Url = '../api/Compras/SaveCompra';
        console.log(Url)
        let result = await fetch(Url,{ 
            method: "POST",
            headers: {
                'Content-Type': "application/json; charset=utf-8",
                'Accept': ""
            },
            body:JSON.stringify(Compra)
        })
        .then(response => response.json());

        alert(`La compra se ha creado! con el proveedorId ${Compra.cabecera.FKProveedor} Iva ${Compra.cabecera.IvaCompra} TotalCompra ${Compra.cabecera.TotalCompra}`)
        window.location ='/Compras/ComprasIndex';
    }



        
            function doSearch() {
                const tableReg = document.getElementById('datos');
                const searchText = document.getElementById('searchTerm').value.toLowerCase();
                let total = 0;

                // Recorremos todas las filas con contenido de la tabla
                for (let i = 1; i < tableReg.rows.length; i++) {
                    // Si el td tiene la clase "noSearch" no se busca en su cntenido
                    if (tableReg.rows[i].classList.contains("noSearch")) {
                        continue;
                    }

                    let found = false;
                    const cellsOfRow = tableReg.rows[i].getElementsByTagName('td');
                    // Recorremos todas las celdas
                    for (let j = 0; j < cellsOfRow.length && !found; j++) {
                        const compareWith = cellsOfRow[j].innerHTML.toLowerCase();
                        // Buscamos el texto en el contenido de la celda
                        if (searchText.length == 0 || compareWith.indexOf(searchText) > -1) {
                            found = true;
                            total++;
                        }
                    }
                    if (found) {
                        tableReg.rows[i].style.display = '';
                    } else {
                        // si no ha encontrado ninguna coincidencia, esconde la
                        // fila de la tabla
                        tableReg.rows[i].style.display = 'none';
                    }
                }

                // mostramos las coincidencias
                const lastTR = tableReg.rows[tableReg.rows.length - 1];
                const td = lastTR.querySelector("td");
                lastTR.classList.remove("hide", "red");
                if (searchText == "") {
                    lastTR.classList.add("hide");
                } else if (total) {
                    td.innerHTML = "Se ha encontrado " + total + " coincidencia" + ((total > 1) ? "s" : "");
                } else {
                    lastTR.classList.add("red");
                    td.innerHTML = "No se han encontrado coincidencias";
                }
            }
    </script>
}
<div style="margin-top:10pt">
    <a asp-page="/Index"> <input type="button" class="btn-success" value="Ir a Inicio" /></a>
    <a asp-page="/Compras/ComprasIndex"> <input type="button" class="btn-info" value="Volver a listado de compras" /></a>
</div>

<form>
  <div class="row">
      <div class="form-group col-md-4">
        <label for="staticFecha">Fecha:</label>
        <input type="text" readonly class="form-control" id="staticFecha" value=@{DateTime.Now.ToString();}>
      </div>
      <div class="form-group col-md-4">
        <label>Provedor:</label>
        <select id="TxtIdProveedor" class="custom-select">
            @foreach(var item in Model.Proveedores)
            {
                <option value=@item.IdProveedor>@item.NombreProveedor</option>
            }
        </select>
            
      </div>
  </div>
  <div class = "row">
      <div class="form-group col-md-4">
          <input type="hidden" class="form-control" id="TxtId"/>
            <label>Articulo:</label>
            <select id="TxtIdCategoria" class="form-control" type="text" value="Nombre">
                @foreach (var item in Model.Articulos)
                {
                    <option value=@item.IdArticulo>@item.NombreArticulo</option>
                }
            </select>
            @*<button type="button" style="margin-top:20pt" data-toggle="modal" data-target="#ModalArticuloComprar">Agregar Articulo</button>*@
      </div>
      <div class="form-group col-md-4">
            <label>Cantidad:</label>
            <input type="number" id="TxtCantidadDetalleCompra" class="form-control" min=0 placeholder="Ingrese la Cantidad"/>
            <span class="text-danger"></span>
      </div>       
      <div class="form-group col-md-4">
            <label>Precio:</label>
            <input type="number" id="TxtPrecioDetalleCompra" class="form-control" min=0 placeholder="Ingrese el Precio" />
            <span class="text-danger"></span>
      </div>
  </div>
  <div class="row">
      <div class="form-group col-md-4">
        <label for="staticEmail">Sub Total:</label>
        <input type="text" readonly class="form-control" id="staticSubTotal" value="C$ 0">
      </div>
      <div class="form-group col-md-4">
        <label for="staticEmail">IVA:</label>
        <input type="text" readonly class="form-control" id="staticIVA" value="C$ 0">
      </div>
      <div class="form-group col-md-4">
        <label for="staticEmail">Total:</label>
        <input type="text" readonly class="form-control" id="staticPrecioTotal" value="C$ 0">
      </div>
  </div>
  <button type="button" class="btn btn-success"  onclick="addRow()">Agregar Articulo</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>Articulo</th>
            <th>Cantidad</th>
            <th>Precio</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="tbl-detalle">
    </tbody>
</table>

<div class="modal-footer">
    <button type="button" class="btn btn-success" id="Crear" onclick="createCompra()" >Crear Compra</button>
</div>


  @*Modal para agregar nuevo articulo*@
<div class="modal fade" id="ModalArticuloComprar" role="dialog" class="row p-5 border-0">
      <div class="modal-dialog modal-lg">
          <div class="modal-content" >
                <form method="post"enctype="multipart/form-data" >
                    <div class="modal-header">
                        <h2>Agregar Articulo a la Compra</h2>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div  >
                                <div class="text-danger"></div>
                            </div>
                        </div>
                        <div>
                        <input type="text" placeholder="Escribe el Articulo" id="searchTerm" onkeyup="doSearch()" />
                            <button type="button" class="btn-dark">Buscar</button>
                        </div>
                   <div >
                    <table class="table" id="datos" >
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nombre</th>
                                <th>Descripcion</th>
                                <th>Unidad de Medida</th>
                                <th>Estado</th>
                                <th>Categoria</th>
                                @*<th>Preciooo Venta</th>*@
                                <th>Acciones</th>
                                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Articulos)
                            {
                                <tr>
                                    <td>
                                        @item.IdArticulo
                                    </td>

                                    <td>
                                        @item.NombreArticulo
                                    </td>
                                    <td>
                                        @item.DescripcionArticulo
                                    </td>
                                    <td>
                                            @item.IdTalla
                                    </td>
                                    <td>
                                        @item.EstadoArticulo
                                    </td>
                                    <td>
                                        @item.IdCategoria
                                    </td>
                                    @*<td>
                                        @item.PrecioVenta
                                    </td>*@
                                    <td>
                                            <button type="button" class="btn-success" onclick="agregarArticulo(@item.IdArticulo)">Agregar</button>
                                    </td>
                                </tr>

                                    <tr class='noSearch hide'>
                                        <td colspan="5"></td>
                                    </tr>
                            }
                        </tbody>
                    </table>
                   </div>
                  </div>
               
                </form>
          </div>
      </div>

    <style>
        #datos {
            border: 1px solid #ccc;
            padding: 10px;
            font-size: 1em;
        }

            #datos tr:nth-child(even) {
                background: #ccc;
            }

            #datos td {
                padding: 5px;
            }

            #datos tr.noSearch {
                background: White;
                font-size: 0.8em;
            }

                #datos tr.noSearch td {
                    padding-top: 10px;
                    text-align: right;
                }

        .hide {
            display: none;
        }

        .red {
            color: Red;
        }
    </style>
      


  </div>